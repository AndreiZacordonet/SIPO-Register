----------------------------------------------------------------------------------
-- Module Name: circuit_secvential - Behavioral
----------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
library UNISIM;
use UNISIM.VComponents.all;

--SIPO stg/drt
entity circuit_secvential is
    Port (
	clk: in STD_LOGIC;
        reset: in STD_LOGIC;
        D_IN: in STD_LOGIC;
        Q_OUT: out STD_LOGIC_VECTOR(15 downto 0);
        sel: in STD_LOGIC
        );
end circuit_secvential;

architecture Behavioral of circuit_secvential is
    signal D: STD_LOGIC;
    signal Q: STD_LOGIC_VECTOR(15 downto 0);
begin
    D <= D_IN;
    Q_OUT <= Q; 
    process(clk)
    begin
        if(reset = '0') then
            Q <= (others => '0');
        else 
            if rising_edge(clk) then
                if(sel = '0') then --shift RIGHT
                    --Q(1 to 15) <= Q(0 to 14);
                    Q(15) <= Q(14) ;
                    Q(14) <= Q(13) ;
                    Q(13) <= Q(12) ;
                    Q(12) <= Q(11) ;
                    Q(11) <= Q(10) ;
                    Q(10) <= Q(9) ;
                    Q(9) <= Q(8) ;
                    Q(8) <= Q(7) ;
                    Q(7) <= Q(6) ;
                    Q(6) <= Q(5) ;
                    Q(5) <= Q(4) ;
                    Q(4) <= Q(3) ;
                    Q(3) <= Q(2) ;
                    Q(2) <= Q(1) ;
                    Q(1) <= Q(0) ;
                    Q(0) <= D;
                else --shift LEFT
                    --Q(14 downto 0) <= Q(15 downto 1);
                    Q(0) <= Q(1) ;
                    Q(1) <= Q(2) ;
                    Q(2) <= Q(3) ;
                    Q(3) <= Q(4) ;
                    Q(4) <= Q(5) ;
                    Q(5) <= Q(6) ;
                    Q(6) <= Q(7) ;
                    Q(7) <= Q(8) ;
                    Q(8) <= Q(9) ;
                    Q(9) <= Q(10) ;
                    Q(10) <= Q(11) ;
                    Q(11) <= Q(12) ;
                    Q(12) <= Q(13) ;
                    Q(13) <= Q(14) ;
                    Q(14) <= Q(15) ;
                    Q(15) <= D;
                end if;
            end if;
         end if;
     end process;
end Behavioral;